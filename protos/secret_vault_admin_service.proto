syntax = "proto2";
package secret_vault;

service SecretVaultAdmin {
    rpc GetAdminConfig(GetAdminConfigRequest) returns (GetAdminConfigResponse);

    rpc CreateVault(CreateVaultRequest) returns (CreateVaultResponse);
//    rpc ReadVault(ReadVaultRequest) returns (ReadVaultResponse);
//    rpc UpdateVault(UpdateVaultRequest) returns (UpdateVaultResponse);
    rpc DeleteVault (DeleteVaultRequest) returns (DeleteVaultResponse);

    // User CRUD for user type (ADMIN, USER)

    // TODO: Refactor for user
    rpc AddMetadata (AddMetadataRequest) returns (AddMetadataResponse);
    rpc RemoveMetadata (RemoveMetadataRequest) returns (RemoveMetadataResponse);
    rpc GetMetadata (GetMetadataRequest) returns (GetMetadataResponse);
    rpc UpdateMetadata (UpdateMetadataRequest) returns (UpdateMetadataResponse);

//    rpc ListLockerInDelete(ListLockersInDelete) returns (ListLockersInDelete);
//    rpc DeleteLocker(DeleteLockerRequest) returns (DeleteLockerResponse);
//    rpc ResusciateLocker(ResusciateLockerRequest) returns (ResusciateLockerResponse);
//
//    // For now, locker count (be creative!)
//    rpc GetMetrics(GetMetricsRequest) returns (GetMetricsResponse);
}

message GetAdminConfigRequest {}
message GetAdminConfigResponse {
    required string config = 1;
}

message CreateVaultRequest {
    required string vault_id = 1;
    required string vault_name = 2;
    // TODO: enum for all support authentication mechanisms
    // like SSO, 2FA, PKI.
    // For test: null-plugin which checks for existence for vault.
}

message CreateUserRequest {
    required string user_id = 1;
    required string user_pub_cert = 2;
}

message CreateVaultResponse {}

message DeleteVaultRequest {
    required string vault_id = 1;
}

message DeleteVaultResponse {}

message AddMetadataRequest {
    required string vault_id = 1;
    required string name = 2;
    required string value = 3;
}

message AddMetadataResponse {}

message RemoveMetadataRequest {
    required string vault_id = 1;
    required string name = 2;
}

message RemoveMetadataResponse {}

message GetMetadataRequest {
    required string vault_id = 1;
    required string name = 2;
}

message GetMetadataResponse {
    required string value = 1;
}

message UpdateMetadataRequest {
    required string vault_id = 1;
    required string name = 2;
    required string value = 3;
}

message UpdateMetadataResponse {}
